{"version":3,"sources":["components/Search-box/search-box.component.jsx","components/Card/card.component.jsx","components/Card-List/card-list.component.js","components/Card-Grid/card-grid.component.jsx","players.js","containers/App.js","serviceWorker.js","index.js"],"names":["SearchBox","searchChange","className","typeof","placeholder","onChange","Card","name","position","number","imageUrl","src","alt","height","width","CardList","players","map","player","i","key","CardGrid","Grid","Row","filter","area","id","App","onSearchChange","event","setState","searchfield","target","value","state","this","filteredPlayers","toLowerCase","includes","length","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d666a49.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        typeof='search'\r\n        placeholder='Search Player'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\n\r\nexport const Card = ({ name, position, number, imageUrl }) => {\r\n  return ( \r\n    <div className='tc dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img\r\n        src={imageUrl}\r\n        alt='football player'\r\n        height=\"200px\"\r\n        width=\"350px\"\r\n      />\r\n      <>\r\n        <h2>{name}</h2>\r\n        <p>{position}</p>\r\n        <p>{number}</p>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Card } from '../Card/card.component';\r\n\r\nconst CardList = ({ players }) => {\r\n  return (\r\n    <>\r\n    {\r\n      players.map((player, i) => {\r\n        return (\r\n        <Card \r\n            key={`playercard${i}`}\r\n            {...player}\r\n            />\r\n          );\r\n        })\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;","import React from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport CardList from '../Card-List/card-list.component';\r\n\r\nexport const CardGrid = ({ players }) => {\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Row>\r\n        <CardList players={players.filter(player => player.area === 'GK')} />\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <CardList players={players.filter(player => player.area === 'Defence')} />\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <CardList players={players.filter(player => player.area === 'Midfield')} />\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <CardList players={players.filter(player => player.area === 'Attack')} />\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};","export const players = [\r\n  {\r\n    id: 1,\r\n    name: 'Alisson Becker',\r\n    position: 'Goalkeeper',\r\n    area: 'GK',\r\n    number: 1,\r\n    imageUrl: 'https://d3j2s6hdd6a7rg.cloudfront.net/v2/uploads/media/default/0001/98/thumb_97902_default_news_size_5.jpeg'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Andrew Robertson',\r\n    position: 'Left-Wing Back',\r\n    area: 'Defence',\r\n    number: 26,\r\n    imageUrl: 'https://images2.minutemediacdn.com/image/upload/c_fill,w_912,h_516,f_auto,q_auto,g_auto/shape/cover/sport/liverpool-fc-v-krc-genk-group-e-uefa-champions-league-5dca95e3cd8b77618c000001.jpg'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Virgil Van Dijk',\r\n    position: 'Central Defender',\r\n    area: 'Defence',\r\n    number: 4,\r\n    imageUrl: 'https://as01.epimg.net/en/imagenes/2019/12/01/football/1575213276_921084_1575213488_noticia_normal_recorte1.jpg'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Joe Gomez',\r\n    position: 'Central Defender',\r\n    area: 'Defence',\r\n    number: 12,\r\n    imageUrl: 'https://images2.minutemediacdn.com/image/upload/c_fill,w_912,h_516,f_auto,q_auto,g_auto/shape/cover/sport/liverpool-fc-v-rb-salzburg-group-e-uefa-champions-league-5db442d691a162e753000001.jpg'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Trent Alexander-Arnold',\r\n    position: 'Right-Wing Back',\r\n    area: 'Defence',\r\n    number: 66,\r\n    imageUrl: 'https://cdn.images.express.co.uk/img/dynamic/67/590x/1221377_1.jpg?r=1577405334288'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Georginio Wijnaldum',\r\n    position: 'Central Midfielder',\r\n    area: 'Midfield',\r\n    number: 5,\r\n    imageUrl: 'https://images2.minutemediacdn.com/image/upload/c_fill,w_912,h_516,f_auto,q_auto,g_auto/shape/cover/sport/liverpool-fc-v-leicester-city-premier-league-5d9c746100a54e90bf000019.jpg'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Fabinho Tavares',\r\n    position: 'Central-Defensive Midfielder',\r\n    area: 'Midfield',\r\n    number: 3,\r\n    imageUrl: 'https://i.eurosport.com/2019/10/23/2701740-55857110-2560-1440.jpg?w=750'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Jordan Henderson',\r\n    position: 'Central Midfielder',\r\n    area: 'Midfield',\r\n    number: 14,\r\n    imageUrl: 'https://img.fifa.com/image/upload/t_l4/v1576863741/cwzdvhzth2iqcrf3fjp1.jpg'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Sadio Mane',\r\n    position: 'Left-winger',\r\n    area: 'Attack',\r\n    number: 10,\r\n    imageUrl: 'https://d2x51gyc4ptf2q.cloudfront.net/content/uploads/2019/12/15084934/Sadio-Mane-Liverpool1.jpg'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Roberto Firmino',\r\n    position: 'Central Forward',\r\n    area: 'Attack',\r\n    number: 9,\r\n    imageUrl: 'https://d3vlf99qeg6bpx.cloudfront.net/content/uploads/2019/09/16101735/GettyImages.1168070128.jpg'\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Mohamed Salah',\r\n    position: 'Right-Winger',\r\n    area: 'Attack',\r\n    number: 11,\r\n    imageUrl:'https://static.independent.co.uk/s3fs-public/thumbnails/image/2020/01/20/16/mohamed-salah.jpg?width=1000&height=614&fit=bounds&format=pjpg&auto=webp&quality=70&crop=16:9,offset-y0.5'\r\n  }\r\n]\r\n\r\nexport default players;","import React, { Component } from 'react';\r\nimport { SearchBox } from '../components/Search-box/search-box.component';\r\nimport { CardGrid } from '../components/Card-Grid/card-grid.component';\r\nimport players from '../players';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() { \r\n    super()\r\n    this.state = {\r\n      players,\r\n      searchfield: ''\r\n    }\r\n  }\r\n  \r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render () {\r\n    const { players, searchfield } = this.state;\r\n\r\n    const filteredPlayers = players.filter(player => {\r\n      return player.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    }); \r\n\r\n    return !players.length ?  \r\n      <h1>Loading</h1> :\r\n    (\r\n      <div className='tc'>\r\n        <h1 className=\"f1\">Liverpool FC</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <CardGrid players={filteredPlayers}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}